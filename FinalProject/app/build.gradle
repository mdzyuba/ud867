apply plugin: 'com.android.application'
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.google.cloud.tools:endpoints-framework-gradle-plugin:1.0.3'
    }
}

android {
    compileSdkVersion projectCompileSdkVersion

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion projectMinSdkVersion
        targetSdkVersion projectTargetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField('String', 'WEB_API_URL', "$app_engine_url")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    flavorDimensions "version", "appEng"

    productFlavors {
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }
        paid {
            dimension "version"
            applicationIdSuffix ".paid"
            versionNameSuffix "-paid"
        }
        // This build flavor to be used while running connected tests
        // with a local GCE app engine dev server.
        localAppEng {
            dimension "appEng"
            // Note: This option can be used if the host security settings allow
            // access to the local app engine:
            // def host=InetAddress.localHost.canonicalHostName
            //
            // In my case, my Mac has security restrictions that do not allow
            // an access to the http server running on the local host from
            // other machines on the network. So, in this case, I am using
            // an Android emulator running on the same host as the local GCE
            // app engine dev server. The Android emulator has a "magic" ip
            // address 10.0.2.2 that points to the host.
            def host='10.0.2.2'
            def local_app_engine_url="http://${host}:8080/_ah/api/"
            buildConfigField('String', 'WEB_API_URL', "\"$local_app_engine_url\"")
        }
        remoteAppEng {
            dimension "appEng"
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    endpointsServer project(path: ':backend', configuration: 'endpoints')

    implementation 'androidx.appcompat:appcompat:1.0.2'
    freeImplementation 'com.google.android.gms:play-services-ads:18.0.0'
    freeImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'

    implementation 'com.google.api-client:google-api-client:1.25.0'
    implementation 'com.google.http-client:google-http-client-android:1.23.0'

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation project(path: ':jokes_android_lib')
    implementation project(path: ':jokes_java_lib')

    testImplementation 'junit:junit:4.12'

    androidTestFreeImplementation 'com.google.android.gms:play-services-ads:18.0.0'
    androidTestImplementation 'com.google.api-client:google-api-client:1.25.0'
    androidTestImplementation 'com.google.http-client:google-http-client-android:1.23.0'
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    androidTestImplementation 'androidx.test:core:1.2.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

}
